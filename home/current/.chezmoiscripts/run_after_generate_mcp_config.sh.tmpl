#!/usr/bin/env bash
set -euo pipefail

exit 0 ## TODO: Re-enable mcp sync script

# This script synchronizes the Windsurf MCP config to the windsurf-next location.
# It runs after chezmoi apply. The canonical config is rendered by chezmoi from
# templates at: ~/.config/.codeium/windsurf/mcp_config.json
# We mirror that file into: ~/.codeium/windsurf-next/mcp_config.json

SRC_CONFIG_FILE="${XDG_CONFIG_HOME:-{{ .chezmoi.homeDir }}/.config}/.codeium/windsurf/mcp_config.json"
DEST_CONFIG_DIR="{{ .chezmoi.homeDir }}/.codeium/windsurf-next"
DEST_CONFIG_FILE="${DEST_CONFIG_DIR}/mcp_config.json"

echo "Syncing Windsurf MCP config to windsurf-next..."

# Ensure destination directory exists
mkdir -p "${DEST_CONFIG_DIR}"

if [ -f "${SRC_CONFIG_FILE}" ] && [ -s "${SRC_CONFIG_FILE}" ]; then
  # Validate JSON before copying (best-effort)
  if command -v jq >/dev/null 2>&1; then
    if ! jq empty "${SRC_CONFIG_FILE}" >/dev/null 2>&1; then
      echo "Warning: source config exists but is not valid JSON: ${SRC_CONFIG_FILE}" >&2
      echo "Aborting sync to avoid writing a bad file." >&2
      exit 1
    fi
  fi

  cp "${SRC_CONFIG_FILE}" "${DEST_CONFIG_FILE}"
  # Ensure file is not executable
  chmod -x "${DEST_CONFIG_FILE}"
  echo "Synced: ${SRC_CONFIG_FILE} -> ${DEST_CONFIG_FILE}"
else
  echo "Warning: source config not found or empty: ${SRC_CONFIG_FILE}" >&2
  echo "No changes made to ${DEST_CONFIG_FILE}." >&2
fi

echo "MCP config synchronization complete."
