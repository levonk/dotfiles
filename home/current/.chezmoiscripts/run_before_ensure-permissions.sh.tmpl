#!/usr/bin/env bash
{{ if or (eq .chezmoi.os "linux") (eq .chezmoi.os "darwin") }}
# Ensure sane permissions for sensitive directories and files before each apply
# Runs before targets are applied to prevent chezmoi prompts on directories
# that change frequently (e.g., ~/.ssh) while maintaining secure modes.

set -euo pipefail

# Be conservative by default
umask 077

log() { [ "${DOTFILES_PERMS_DEBUG:-0}" = "1" ] && echo "[perms] $*" >&2 || true; }

ensure_dir() {
  local mode="$1"; shift
  local path="$1"; shift
  if [ ! -d "$path" ]; then
    log "mkdir -p $path"
    mkdir -p "$path"
  fi
  # Always enforce target mode to recover from drift
  chmod "$mode" "$path" 2>/dev/null || true
}

ensure_file_mode_if_exists() {
  local mode="$1"; shift
  local path="$1"; shift
  if [ -f "$path" ]; then
    chmod "$mode" "$path" 2>/dev/null || true
  fi
}

# Directories: lock down user configuration/state
ensure_dir 700 "$HOME/.ssh"
ensure_dir 755 "${XDG_CONFIG_HOME:-$HOME/.config}"
ensure_dir 700 "${XDG_STATE_HOME:-$HOME/.local/state}"
ensure_dir 755 "${XDG_DATA_HOME:-$HOME/.local/share}"
ensure_dir 700 "$HOME/.cache"

# SSH file permissions
SSH_DIR="$HOME/.ssh"
if compgen -G "$SSH_DIR/*" > /dev/null; then
  # Private keys (non-.pub, excluding common non-key files)
  find "$SSH_DIR" -maxdepth 1 -type f \
    ! -name "*.pub" \
    ! -name "known_hosts*" \
    ! -name "config" \
    ! -name "authorized_keys" \
    -exec chmod 600 {} +

  # Public keys
  find "$SSH_DIR" -maxdepth 1 -type f -name "*.pub" -exec chmod 644 {} +

  # Known hosts and config
  ensure_file_mode_if_exists 644 "$SSH_DIR/known_hosts"
  ensure_file_mode_if_exists 600 "$SSH_DIR/config"
  ensure_file_mode_if_exists 600 "$SSH_DIR/authorized_keys"
fi

# Create baseline SSH files if missing (idempotent) and set modes
if [ ! -f "$SSH_DIR/config" ]; then
  : > "$SSH_DIR/config"
  chmod 600 "$SSH_DIR/config" 2>/dev/null || true
fi
if [ ! -f "$SSH_DIR/known_hosts" ]; then
  : > "$SSH_DIR/known_hosts"
  chmod 644 "$SSH_DIR/known_hosts" 2>/dev/null || true
fi
if [ ! -f "$SSH_DIR/authorized_keys" ]; then
  : > "$SSH_DIR/authorized_keys"
  chmod 600 "$SSH_DIR/authorized_keys" 2>/dev/null || true
fi

# Optional: ensure ~/.local/bin exists (non-sensitive)
if [ -n "${XDG_BIN_HOME:-}" ]; then
  ensure_dir 755 "${XDG_BIN_HOME}"
else
  ensure_dir 755 "$HOME/.local/bin"
fi

exit 0
{{ end }}

