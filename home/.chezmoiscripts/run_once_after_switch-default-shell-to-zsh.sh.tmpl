#!/usr/bin/env bash
{{- if ne .chezmoi.os "windows" -}}
# Switch default login shell to zsh if not already and if available
# Runs once via chezmoi. Safe no-op when conditions aren't met.
# Controls:
#   CHEZMOI_NO_SHELL_SWITCH=1  -> disable
#   CHEZMOI_SHELL_SWITCH_STRICT=1 -> treat failures as fatal

set -euo pipefail

: "${CHEZMOI_NO_SHELL_SWITCH:=0}"
: "${CHEZMOI_SHELL_SWITCH_STRICT:=0}"

if [[ "$CHEZMOI_NO_SHELL_SWITCH" == "1" ]]; then
  exit 0
fi

# chsh is the standard tool for changing shells as non-root
if ! command -v chsh >/dev/null 2>&1; then
  # Not available in this environment; skip quietly
  exit 0
fi

# Determine current login shell from passwd; fallback to $SHELL
current_shell="$(getent passwd "$USER" 2>/dev/null | awk -F: '{print $7}')"
current_shell="${current_shell:-${SHELL:-}}"

# If already zsh, nothing to do
if [[ "$current_shell" == *"zsh" ]]; then
  exit 0
fi

# Find zsh
zsh_path="$(command -v zsh || true)"
if [[ -z "$zsh_path" ]]; then
  # zsh not installed; skip
  exit 0
fi

# Ensure zsh is listed in /etc/shells, otherwise chsh will reject it
if [[ -r /etc/shells ]] && ! grep -qx "$zsh_path" /etc/shells 2>/dev/null; then
  # Cannot modify /etc/shells without privilege; inform and skip gracefully
  echo "[INFO] zsh found at $zsh_path but not listed in /etc/shells; skipping automatic chsh."
  echo "       Manually add it to /etc/shells or use: chsh -s $zsh_path $USER"
  if [[ "$CHEZMOI_SHELL_SWITCH_STRICT" == "1" ]]; then exit 1; else exit 0; fi
fi

# Perform the switch. May prompt for password depending on PAM policy.
if chsh -s "$zsh_path" "$USER"; then
  echo "[INFO] Default shell changed to: $zsh_path"
  echo "      Log out and back in (or start a new login session) to take effect."
  exit 0
else
  echo "[WARN] Failed to change shell with chsh. Try manually: chsh -s $zsh_path $USER"
  if [[ "$CHEZMOI_SHELL_SWITCH_STRICT" == "1" ]]; then exit 1; else exit 0; fi
fi
{{- end -}}
