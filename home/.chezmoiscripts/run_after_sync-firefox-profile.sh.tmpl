#!/bin/sh

# This script is run by chezmoi to sync the Firefox profile files
# into the correct, dynamically named profile directory.

set -e

{{ if eq .chezmoi.os "windows" }}
# This script does not yet support Windows.
# A PowerShell equivalent would be needed to find the profile in %APPDATA%.
echo "Firefox profile sync: Windows is not yet supported by this script."
exit 0
{{ end }}

# Define the source directory for the profile templates.
SOURCE_DIR="{{ .chezmoi.homeDir }}/.config/firefox-profile-template"

# List of files to sync to the Firefox profile.
PROFILE_FILES="user.js prefs.js extensions.json addons.json handlers.json mimeTypes.rdf"

# Determine the Firefox profiles directory based on the OS.
PROFILES_DIR=""
{{ if eq .chezmoi.os "darwin" }}
PROFILES_DIR="{{ .chezmoi.homeDir }}/Library/Application Support/Firefox/Profiles"
{{ else if eq .chezmoi.os "linux" }}
PROFILES_DIR="{{ .chezmoi.homeDir }}/.mozilla/firefox"
{{ end }}

if [ -z "$PROFILES_DIR" ] || [ ! -d "$PROFILES_DIR" ]; then
    echo "Firefox profile sync: Profiles directory not found at $PROFILES_DIR. Skipping."
    exit 0
fi

# Find the default-release profile directory.
PROFILE_PATH=$(find "$PROFILES_DIR" -mindepth 1 -maxdepth 1 -type d -name '*.default-release' | head -n 1)

if [ -z "$PROFILE_PATH" ]; then
    echo "Firefox profile sync: No *.default-release profile found in $PROFILES_DIR. Skipping."
    exit 0
fi

# Loop through the profile files and copy each one.
for FILENAME in $PROFILE_FILES; do
    SOURCE_FILE="$SOURCE_DIR/$FILENAME"
    DEST_FILE="$PROFILE_PATH/$FILENAME"

    if [ -f "$SOURCE_FILE" ]; then
        echo "Firefox profile sync: Copying $FILENAME to $PROFILE_PATH"
        cp "$SOURCE_FILE" "$DEST_FILE"
    else
        echo "Firefox profile sync: Source file $SOURCE_FILE not found. Skipping."
    fi
done

echo "Firefox profile sync: Successfully updated Firefox profile."
