#!/bin/bash
set -euo pipefail

# This script generates the MCP config for windsurf-next
# It runs after chezmoi apply to ensure the file is properly generated

MCP_CONFIG_DIR="{{ .chezmoi.homeDir }}/.codeium/windsurf-next"
MCP_CONFIG_FILE="${MCP_CONFIG_DIR}/mcp_config.json"

echo "Generating MCP config for windsurf-next..."

# Ensure directory exists
mkdir -p "${MCP_CONFIG_DIR}"

# Read existing config if it exists
EXISTING_CONTENT="{}"
EXISTING_SERVERS="{}"
if [ -f "${MCP_CONFIG_FILE}" ] && [ -s "${MCP_CONFIG_FILE}" ]; then
  EXISTING_CONTENT=$(cat "${MCP_CONFIG_FILE}")
  # Extract mcpServers if they exist
  if grep -q '"mcpServers"' "${MCP_CONFIG_FILE}"; then
    EXISTING_SERVERS=$(jq -r '.mcpServers // {}' "${MCP_CONFIG_FILE}" 2>/dev/null || echo "{}")
  fi
fi

# Create a basic structure for the new config
NEW_CONFIG="{"

# Add editorconfig if it exists in the original
if grep -q '"editorconfig"' "${MCP_CONFIG_FILE}" 2>/dev/null; then
  EDITOR_CONFIG=$(jq -r '.editorconfig' "${MCP_CONFIG_FILE}" 2>/dev/null || echo "{}")
  NEW_CONFIG="${NEW_CONFIG}\n  \"editorconfig\": ${EDITOR_CONFIG},"
fi

# Add mcpServers section
NEW_CONFIG="${NEW_CONFIG}\n  \"mcpServers\": {"

# Add archon server by default
NEW_CONFIG="${NEW_CONFIG}\n    \"archon\": {
      \"command\": \"npx\",
      \"args\": [
        \"-y\",
        \"@modelcontextprotocol/server-archon\"
      ],
      \"env\": {}
    }"

# Close the JSON structure
NEW_CONFIG="${NEW_CONFIG}\n  }\n}"

# Write the new config
echo -e "${NEW_CONFIG}" > "${MCP_CONFIG_FILE}"

# Fix permissions
chmod -x "${MCP_CONFIG_FILE}"

echo "MCP config for windsurf-next generated successfully"
