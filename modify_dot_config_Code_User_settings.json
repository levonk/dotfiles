{{- /* chezmoi:modify-template */ -}}
{{/*
  This Chezmoi script manages specific settings in VS Code's settings.json file.
  It merges the following settings into the existing JSON:
    - editor.insertSpaces: false (Use tabs)
    - editor.tabSize: 4 (Tab width)
    - files.trimTrailingWhitespace: true (Trim trailing whitespace)
    - files.insertFinalNewline: true (Insert final newline)
    - files.trimFinalNewlines: true (Trim final newlines)
  All other settings will remain unchanged.
*/ -}}
{{ $current := fromJson .chezmoi.stdin }}
{{ $new := dict "editor.insertSpaces" false,
  "editor.tabSize" 2,
  "files.trimTrailingWhitespace" true,
  "files.insertFinalNewline" true,
  "files.trimFinalNewlines" true,
  "github.copilot.nextEditSuggestions.enabled" true,
  "geminiCode.authMethod" "apikey",
  "geminiCode.includeRelatedFiles" true,
  "geminicodeassist.codeGenerationPaneViewEnabled" true,
  "geminicodeassist.enableTelemetry" false,
  "chat.mcp.discovery.enabled" true,
  "editor.formatOnSave" true,
  "editor.defaultFormatter" "esbenp.prettier-vscode",
  "geminicodeassist.verboseLogging" true,
  "geminicodeassist.updateChannel" "Insiders",
  "github.copilot.chat.agent.thinkingTool" true,
  "github.copilot.chat.editor.temporalContext.enabled" true,
  "github.copilot.chat.completionContext.typescript.mode" "on",
  "github.copilot.chat.edits.temporalContext.enabled" true,
  "github.copilot.chat.generateTests.codeLens" true,
  "github.copilot.chat.languageContext.fix.typescript.enabled" true,
  "github.copilot.chat.languageContext.inline.typescript.enabled" true,
  "github.copilot.chat.languageContext.typescript.enabled" true,
  "github.copilot.chat.notebook.followCellExecution.enabled" true,
  "editor.dropIntoEditor.preferences" (list),
  "cSpell.enabled" true,
  "cSpell.diagnosticLevel" "Hint",
  "fontSizeShortcuts.fontSizeDefault" 12,
  "fontSizeShortcuts.fontSizeIncrement" 2,
  "fontSizeShortcuts.maxFontSize" 24,
  "fontSizeShortcuts.minFontSize" 8,
  "prettier-ts-errors.colorTheme" "Default Dark+",
  "codesnap.containerBackgroundColor" "#0d1117",
  "editor.wordWrap" "on",
  "editor.renderWhitespace" "boundary",
  "files.encoding" "utf8",
  "terminal.integrated.fontSize" 12,
  "workbench.sideBar.location" "left",
  "codesnap.backgroundColor" "#000000",
  "codesnap.containerPadding" "0px",
  "codesnap.transparentBackground" true,
  "cSpell.enabled" true,
  "cSpell.enableFiletypes" (list "mdx"),
  "diffEditor.ignoreTrimWhitespace" false,
  "editor.detectIndentation" true,
  "editor.fontFamily" "Anonymous Pro",
  "editor.fontLigatures" true,
  "editor.fontSize" 13,
  "editor.formatOnPaste" false,
  "editor.inlineSuggest.enabled" true,
  "editor.lineHeight" 0,
  "editor.linkedEditing" true,
  "editor.minimap.enabled" false,
  "editor.multiCursorModifier" "ctrlCmd",
  "editor.snippetSuggestions" "top",
  "editor.suggestSelection" "first",
  "editor.tabSize" 2,
  "editor.tokenColorCustomizations" (dict
    "textMateRules" (list
      (dict
        "scope" (list "keyword.operator" "punctuation.separator"),
        "settings" (dict "fontStyle" "")
      )
      (dict
        "scope" (list "comment" "comment.block"),
        "settings" (dict
          "fontStyle" "italic"
          "foreground" "#F5F"
        )
      )
      (dict
        "name" "envKeys",
        "scope" "string.quoted.double.env,source.env,constant.numeric.env",
        "settings" (dict
          "foreground" "#19354900"
        )
      )
    )
  ),
  "editor.unicodeHighlight.invisibleCharacters" false,
  "emmet.showAbbreviationSuggestions" false,
  "eslint.enable" true,
  "eslint.validate" (list
    "vue"
    "react"
    "typescript"
    "html"
    "javascript"
  ),
  "explorer.openEditors.visible" 1,
  "extensions.ignoreRecommendations" false,
  "files.autoSave" "onWindowChange",
  "git.autofetch" true,
  "git.openRepositoryInParentFolders" "always",
  "markdown.preview.fontSize" 36,
  "redhat.telemetry.enabled" false,
  "amazonQ.telemetry": false,
  "telemetry.telemetryLevel": "off",
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false,
  "code-runner.enableAppInsights": false,
  "docker-explorer.enableTelemetry": false,
  "terraform.telemetry.enabledenableTelemetry": false,
  "julia.enableTelemetry": false,
  "screencastMode.keyboardOptions" (dict
    "showCommandGroups" false
    "showCommands" false
    "showKeybindings" true
    "showKeys" false
    "showSingleEditorCursorMoves" true
  ),
  "search.exclude" (dict
    "**/*.code-search" true
    "**/bower_components" true
    "**/node_modules" true
  ),
  "search.useIgnoreFiles" false,
  "svelte.enable-ts-plugin" true,
  "vsicons.dontShowNewVersionMessage" true,
  "window.zoomLevel" 4,
  "workbench.colorTheme" "Just Black",
  "workbench.editor.labelFormat" "medium",
  "workbench.editor.showTabs" "none",
  "workbench.iconTheme" "vscode-icons",
  "workbench.startupEditor" "newUntitledFile",
  "workbench.statusBar.visible" false,
  "[css]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[handlebars]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[html]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[javascript]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[javascriptreact]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[json]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[jsonc]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[markdown]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[scss]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[svelte]" (dict
    "editor.defaultFormatter" "svelte.svelte-vscode"
  ),
  "[typescript]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "[typescriptreact]" (dict
    "editor.defaultFormatter" "esbenp.prettier-vscode"
  ),
  "github.copilot.enable": (dict
    "*" true
    "plaintext" false
    "markdown" true
    "scminput" true
  )
}}
{{ $merged := mergeOverwrite $current $new }}
{{ toPrettyJson $merged }}